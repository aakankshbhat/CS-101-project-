#turning an RNA sequence into an amino acid string
genetic_code = {
        'UUU': 'F', 'UUC': 'F', 'UUA': 'L', 'UUG': 'L',        'CUU': 'L', 'CUC': 'L', 'CUA': 'L', 'CUG': 'L',
        'AUU': 'I', 'AUC': 'I', 'AUA': 'I', 'AUG': 'M',        'GUU': 'V', 'GUC': 'V', 'GUA': 'V', 'GUG': 'V',

        'UCU': 'S', 'UCC': 'S', 'UCA': 'S', 'UCG': 'S',        'CCU': 'P', 'CCC': 'P', 'CCA': 'P', 'CCG': 'P',
        'ACU': 'T', 'ACC': 'T', 'ACA': 'T', 'ACG': 'T',        'GCU': 'A', 'GCC': 'A', 'GCA': 'A', 'GCG': 'A',

        'UAU': 'Y', 'UAC': 'Y', 'CAU': 'H', 'CAC': 'H',        'CAA': 'Q', 'CAG': 'Q', 'AAU': 'N', 'AAC': 'N', 
        'AAA': 'K', 'AAG': 'K', 'GAU': 'D', 'GAC': 'D',        'GAA': 'E', 'GAG': 'E', 'UGU': 'C', 'UGC': 'C', 
        'UGG': 'W', 'CGU': 'R', 'CGC': 'R', 'CGA': 'R',        'CGG': 'R', 'AGU': 'S', 'AGC': 'S', 'AGA': 'R', 
        'AGG': 'R', 'GGU': 'G', 'GGC': 'G', 'GGA': 'G',        'GGG': 'G', 'UAA': '', 'UAG': '', 'UGA': '',
    }

#function that turns 3 letter codon to amino acid letter using gentic code dict
def rna_codon(triplet):
    return genetic_code.get(triplet)

#function that turns rna to amino acid string
def rna2codon(rna):
    amino_str = ''
    num_of_codon = int(len(rna)/3) #number of 3 letter codons
    for i in range(0, num_of_codon):
        triplet = rna[3*i:3*i+3] #takes every 3 letters of rna string
        amino_str += rna_codon(triplet) #adds amino acid to empyty string
        continue
    return amino_str
